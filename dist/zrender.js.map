{"version":3,"file":"zrender.js","sources":["../src/zrender.ts"],"sourcesContent":["\r\n \r\nfunction delInstance(id: number) {\r\n \r\n}\r\n\r\n \r\nclass ZRender {\r\n    /**\r\n     * Not necessary if using SSR painter like svg-ssr\r\n     */\r\n    dom?: HTMLElement\r\n\r\n    id: number\r\n \r\n    constructor(id: number, dom?: HTMLElement, opts?: ZRenderInitOpt) {\r\n        opts = opts || {};\r\n\r\n        /**\r\n         * @type {HTMLDomElement}\r\n         */\r\n        this.dom = dom;\r\n\r\n        this.id = id;\r\n\r\n \r\n \r\n    }\r\n\r\n    /**\r\n     * 添加元素\r\n     */\r\n    add(el: Element) {\r\n        if (!el) {\r\n            return;\r\n        }\r\n \r\n    }\r\n\r\n    /**\r\n     * 删除元素\r\n     */\r\n    remove(el: Element) {\r\n        if (!el) {\r\n            return;\r\n        }\r\n \r\n        this.refresh();\r\n    }\r\n\r\n \r\n \r\n    getBackgroundColor() { \r\n    }\r\n\r\n    /**\r\n     * Force to set dark mode\r\n     */\r\n    setDarkMode(darkMode: boolean) {\r\n \r\n    }\r\n\r\n    isDarkMode() { \r\n    }\r\n\r\n    /**\r\n     * Repaint the canvas immediately\r\n     */\r\n    refreshImmediately(fromInside?: boolean) {\r\n  \r\n    }\r\n\r\n    /**\r\n     * Mark and repaint the canvas in the next frame of browser\r\n     */\r\n    refresh() {\r\n \r\n    }\r\n\r\n    /**\r\n     * Perform all refresh\r\n     */\r\n    flush() {\r\n        this._flush(false);\r\n    }\r\n\r\n    private _flush(fromInside?: boolean) {\r\n \r\n    }\r\n\r\n    /**\r\n     * Set sleep after still for frames.\r\n     * Disable auto sleep when it's 0.\r\n     */\r\n    setSleepAfterStill(stillFramesCount: number) {\r\n  \r\n    }\r\n\r\n    /**\r\n     * Wake up animation loop. But not render.\r\n     */\r\n    wakeUp() {\r\n \r\n    }\r\n\r\n    /**\r\n     * Refresh hover in next frame\r\n     */\r\n    refreshHover() {\r\n \r\n    }\r\n\r\n    /**\r\n     * Refresh hover immediately\r\n     */\r\n    refreshHoverImmediately() {\r\n \r\n    }\r\n\r\n    /**\r\n     * Resize the canvas.\r\n     * Should be invoked when container size is changed\r\n     */\r\n    resize(opts?: {\r\n        width?: number| string\r\n        height?: number | string\r\n    }) {\r\n \r\n    }\r\n\r\n    /**\r\n     * Stop and clear all animation immediately\r\n     */\r\n    clearAnimation() {\r\n \r\n    }\r\n\r\n    /**\r\n     * Get container width\r\n     */\r\n    getWidth(): number {\r\n return 0;\r\n    }\r\n\r\n    /**\r\n     * Get container height\r\n     */\r\n    getHeight(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Set default cursor\r\n     * @param cursorStyle='default' 例如 crosshair\r\n     */\r\n    setCursorStyle(cursorStyle: string) {\r\n \r\n    }\r\n  \r\n    /**\r\n     * Dispose self.\r\n     */\r\n    dispose() {\r\n   \r\n    }\r\n}\r\n\r\n\r\nexport interface ZRenderInitOpt {\r\n    renderer?: string   // 'canvas' or 'svg\r\n    devicePixelRatio?: number\r\n    width?: number | string // 10, 10px, 'auto'\r\n    height?: number | string\r\n    useDirtyRect?: boolean\r\n    useCoarsePointer?: 'auto' | boolean\r\n    pointerSize?: number\r\n    ssr?: boolean   // If enable ssr mode.\r\n}\r\n\r\n/**\r\n * Initializing a zrender instance\r\n *\r\n * @param dom Not necessary if using SSR painter like svg-ssr\r\n */\r\nexport function init(dom?: HTMLElement | null, opts?: ZRenderInitOpt) {\r\n    const zr = new ZRender( 1, dom, opts);\r\n  \r\n    return zr;\r\n}\r\n\r\n/**\r\n * Dispose zrender instance\r\n */\r\nexport function dispose(zr: ZRender) {\r\n    zr.dispose();\r\n}\r\n\r\n/**\r\n * Dispose all zrender instances\r\n */\r\nexport function disposeAll() {\r\n \r\n}\r\n\r\n \r\n/**\r\n * @type {string}\r\n */\r\nexport const version = '5.4.0';\r\n\r\n\r\nexport interface ZRenderType extends ZRender {};"],"names":[],"mappings":";;;;;;EAOA;MAQI,iBAAY,EAAU,EAAE,GAAiB,EAAE,IAAqB;UAM5D,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;UAEf,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;OAIhB;MAKD,qBAAG,GAAH,UAAI,EAAW;UACX,IAAI,CAAC,EAAE,EAAE;cACL,OAAO;WACV;OAEJ;MAKD,wBAAM,GAAN,UAAO,EAAW;UACd,IAAI,CAAC,EAAE,EAAE;cACL,OAAO;WACV;UAED,IAAI,CAAC,OAAO,EAAE,CAAC;OAClB;MAID,oCAAkB,GAAlB;OACC;MAKD,6BAAW,GAAX,UAAY,QAAiB;OAE5B;MAED,4BAAU,GAAV;OACC;MAKD,oCAAkB,GAAlB,UAAmB,UAAoB;OAEtC;MAKD,yBAAO,GAAP;OAEC;MAKD,uBAAK,GAAL;UACI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;OACtB;MAEO,wBAAM,GAAd,UAAe,UAAoB;OAElC;MAMD,oCAAkB,GAAlB,UAAmB,gBAAwB;OAE1C;MAKD,wBAAM,GAAN;OAEC;MAKD,8BAAY,GAAZ;OAEC;MAKD,yCAAuB,GAAvB;OAEC;MAMD,wBAAM,GAAN,UAAO,IAGN;OAEA;MAKD,gCAAc,GAAd;OAEC;MAKD,0BAAQ,GAAR;UACH,OAAO,CAAC,CAAC;OACL;MAKD,2BAAS,GAAT;UACI,OAAO,CAAC,CAAC;OACZ;MAMD,gCAAc,GAAd,UAAe,WAAmB;OAEjC;MAKD,yBAAO,GAAP;OAEC;MACL,cAAC;EAAD,CAAC,IAAA;WAmBe,IAAI,CAAC,GAAwB,EAAE,IAAqB;MAChE,IAAM,EAAE,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;MAEtC,OAAO,EAAE,CAAC;EACd,CAAC;WAKe,OAAO,CAAC,EAAW;MAC/B,EAAE,CAAC,OAAO,EAAE,CAAC;EACjB,CAAC;WAKe,UAAU;EAE1B,CAAC;MAMY,OAAO,GAAG;;;;;;;;;;;;;;;"}